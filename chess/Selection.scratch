//----- Green flag events ---------------------------------------------------------------------------------------------

WhenGreenFlagClicked()
{
    Looks.Hide();
    BestMoveCloneIdx = 1;
    Control.CreateCloneOf(_myself_);
    BestMoveCloneIdx = 2;
    Control.CreateCloneOf(_myself_);
    BestMoveCloneIdx = 0;
}


//----- Sprite clicked events -----------------------------------------------------------------------------------------

WhenThisSpriteClicked()
{
    If (BestMoveCloneIdx == 0)
    {
        If (Costume.GetNumberName(name) == "KingSelection")
        {
            Event.Broadcast("kingselected");
        }
    }
}


//----- Broadcast received events -------------------------------------------------------------------------------------

WhenBroadcastReceived(fromsquareselected)
{
    If (BestMoveCloneIdx == 0)
    {
        If (Not ((FromSquareIdx == -1)))
        {
            Looks.Show();
            Looks.SwitchCostumeTo(Selection1);
            Motion.SetX((-208 + (((FromSquareIdx - 1) % 8) * 42.2)));
            Motion.SetY((148 - ((((FromSquareIdx - 1) - ((FromSquareIdx - 1) % 8)) / 8) * 42.2)));
        }
        Else
        {
            Looks.Hide();
        }
    }
}

WhenBroadcastReceived(hidebestmove)
{
    If (BestMoveCloneIdx == 1)
    {
        Looks.Hide();
    }
    If (BestMoveCloneIdx == 2)
    {
        Looks.Hide();
    }
}

WhenBroadcastReceived(kinghovered)
{
    If (BestMoveCloneIdx == 0)
    {
        If (KingHoveredIdx == -1)
        {
            Looks.Hide();
        }
        Else
        {
            Looks.SwitchCostumeTo(KingSelection);
            If (KingHoveredIdx == 0)
            {
                Motion.GoToXY(125, 15);
                Looks.Show();
            }
            If (KingHoveredIdx == 1)
            {
                Motion.GoToXY(30, 15);
                Looks.Show();
            }
        }
    }
}

WhenBroadcastReceived(showbestmove)
{
    If (BestMoveCloneIdx == 1)
    {
        Looks.Show();
        Looks.SwitchCostumeTo(Selection3);
        Motion.SetX((-208 + (((BestMoveFromIdx - 1) % 8) * 42.2)));
        Motion.SetY((148 - ((((BestMoveFromIdx - 1) - ((BestMoveFromIdx - 1) % 8)) / 8) * 42.2)));
    }
    If (BestMoveCloneIdx == 2)
    {
        Looks.Show();
        Looks.SwitchCostumeTo(Selection3);
        Motion.SetX((-208 + (((BestMoveToIdx - 1) % 8) * 42.2)));
        Motion.SetY((148 - ((((BestMoveToIdx - 1) - ((BestMoveToIdx - 1) % 8)) / 8) * 42.2)));
    }
}

WhenBroadcastReceived(StampUserMoveTargets)
{
    Call StampUserMoveTargets;
}

WhenBroadcastReceived(tosquareselected)
{
    If (BestMoveCloneIdx == 0)
    {
        If (Not ((ToSquareIdx == -1)))
        {
            Looks.Show();
            Looks.SwitchCostumeTo(Selection2);
            Motion.SetX((-208 + (((ToSquareIdx - 1) % 8) * 42.2)));
            Motion.SetY((148 - ((((ToSquareIdx - 1) - ((ToSquareIdx - 1) % 8)) / 8) * 42.2)));
        }
        Else
        {
            Looks.Hide();
        }
    }
}

WhenBroadcastReceived(triggerrestart)
{
    Looks.Hide();
}


//----- Custom blocks -------------------------------------------------------------------------------------------------

Define StampUserMoveTargets (warp=true)
{
    If (BestMoveCloneIdx == 2)
    {
        Looks.SwitchCostumeTo(Selection4);
        Idx = 1;
        Repeat (List.Length(UserMoveTargets))
        {
            Motion.SetX((-208 + (((UserMoveTargets[Idx] - 1) % 8) * 42.2)));
            Motion.SetY((148 - ((((UserMoveTargets[Idx] - 1) - ((UserMoveTargets[Idx] - 1) % 8)) / 8) * 42.2)));
            Pen.Stamp();
            Idx += 1;
        }
    }
}
