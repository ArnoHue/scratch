//----- Green flag events ---------------------------------------------------------------------------------------------

WhenGreenFlagClicked()
{
    Looks.Hide();
    MovePieceFromIdx = -1;
    MovePieceToIdx = -1;
}


//----- Broadcast received events -------------------------------------------------------------------------------------

WhenBroadcastReceived(drawboard)
{
    Call DrawBoard(0)(0);
}

WhenBroadcastReceived(movepiece)
{
    If (Variable.Length(MovePieceSpecial) == 0)
    {
        Call DrawBoard(MovePieceFromIdx)(0);
        Call MovePieceImpl(MovePieceFromIdx)(MovePieceToIdx);
    }
    Else
    {
        If (MovePieceSpecial == WhiteKingsideCastling)
        {
            Call DrawBoard(VirtualBoard[61])(0);
            Call MovePieceImpl(VirtualBoard[61])(VirtualBoard[63]);
            Call DrawBoard(VirtualBoard[61])(VirtualBoard[64]);
            Call DrawVirtualPiece(VirtualBoard[63])(WhiteKing);
            Call MovePieceImpl(VirtualBoard[64])(VirtualBoard[62]);
        }
        If (MovePieceSpecial == WhiteQueensideCastling)
        {
            Call DrawBoard(VirtualBoard[61])(0);
            Call MovePieceImpl(VirtualBoard[61])(VirtualBoard[59]);
            Call DrawBoard(VirtualBoard[61])(VirtualBoard[57]);
            Call DrawVirtualPiece(VirtualBoard[59])(WhiteKing);
            Call MovePieceImpl(VirtualBoard[57])(VirtualBoard[60]);
        }
        If (MovePieceSpecial == BlackKingsideCastling)
        {
            Call DrawBoard(VirtualBoard[5])(0);
            Call MovePieceImpl(VirtualBoard[5])(VirtualBoard[7]);
            Call DrawBoard(VirtualBoard[5])(VirtualBoard[8]);
            Call DrawVirtualPiece(VirtualBoard[7])(BlackKing);
            Call MovePieceImpl(VirtualBoard[8])(VirtualBoard[6]);
        }
        If (MovePieceSpecial == BlackQueensideCastling)
        {
            Call DrawBoard(VirtualBoard[5])(0);
            Call MovePieceImpl(VirtualBoard[5])(VirtualBoard[3]);
            Call DrawBoard(VirtualBoard[1])(VirtualBoard[5]);
            Call DrawVirtualPiece(VirtualBoard[3])(BlackKing);
            Call MovePieceImpl(VirtualBoard[1])(VirtualBoard[4]);
        }
    }
    MovePieceFromIdx = -1;
    MovePieceToIdx = -1;
    MoveFromIdx = -1;
    MoveToIdx = -1;
}

WhenBroadcastReceived(selectpromotionpiecewhite)
{
    Event.BroadcastAndWait("modaldialogbegin");
    Looks.SwitchCostumeTo(Panel);
    Motion.GoToXY(-60, 0);
    Pen.Stamp();
    If (IsPlayerBlack == 0)
    {
        Motion.GoToXY(-120, 0);
        Looks.SwitchCostumeTo(WhiteQueen);
        Pen.Stamp();
        Motion.GoToXY(-80, 0);
        Looks.SwitchCostumeTo(WhiteRook);
        Pen.Stamp();
        Motion.GoToXY(-40, 0);
        Looks.SwitchCostumeTo(WhiteBishop);
        Pen.Stamp();
        Motion.GoToXY(0, 0);
        Looks.SwitchCostumeTo(WhiteKnight);
        Pen.Stamp();
    }
    Else
    {
        Motion.GoToXY(-120, 0);
        Looks.SwitchCostumeTo(BlackQueen);
        Pen.Stamp();
        Motion.GoToXY(-80, 0);
        Looks.SwitchCostumeTo(BlackRook);
        Pen.Stamp();
        Motion.GoToXY(-40, 0);
        Looks.SwitchCostumeTo(BlackBishop);
        Pen.Stamp();
        Motion.GoToXY(0, 0);
        Looks.SwitchCostumeTo(BlackKnight);
        Pen.Stamp();
    }
    Repeat Until (Sensing.MouseDown() And (((Sensing.MouseX() > -140) And (Sensing.MouseX() < 20)) And ((Sensing.MouseY() > -20) And (Sensing.MouseY() < 20))))
    {
        Control.Wait(0.1);
    }
    If (Sensing.MouseX() < -100)
    {
        SelectedPromotionPiece = WhiteQueen;
    }
    Else
    {
        If (Sensing.MouseX() < -60)
        {
            SelectedPromotionPiece = WhiteRook;
        }
        Else
        {
            If (Sensing.MouseX() < -20)
            {
                SelectedPromotionPiece = WhiteBishop;
            }
            Else
            {
                SelectedPromotionPiece = WhiteKnight;
            }
        }
    }
    Call DrawBoard(0)(0);
    Event.BroadcastAndWait("modaldialogend");
}


//----- Custom blocks -------------------------------------------------------------------------------------------------

Define DrawBoard(num ExclIdx1)(num ExcldIdx2) (warp=true)
{
    Pen.Clear();
    Event.Broadcast("progressvaluechanged");
    Event.Broadcast("evaluationvaluechanged");
    Idx = 1;
    Repeat (64)
    {
        If ((Not ((Idx == ExclIdx1))) And (Not ((Idx == ExcldIdx2))))
        {
            If (Not ((Board[Idx] == Empty)))
            {
                Call DrawVirtualPiece(Idx)(Board[Idx]);
            }
        }
        Idx += 1;
    }
}

Define DrawPiece(num Idx)(num Piece) (warp=true)
{
    Motion.SetX((-207 + (((Idx - 1) % 8) * 42.2)));
    Motion.SetY((147 - ((((Idx - 1) - ((Idx - 1) % 8)) / 8) * 42.2)));
    Call SelectCostume(Piece);
    Pen.Stamp();
}

Define DrawVirtualPiece(num Idx)(num Piece) (warp=false)
{
    If (IsPlayerBlack == 0)
    {
        Call DrawPiece(Idx)(Piece);
    }
    Else
    {
        Call DrawPiece(Idx)((Piece * -1));
    }
}

Define MovePieceImpl(num FromIdx)(num ToIdx) (warp=false)
{
    If (IsPlayerBlack == 0)
    {
        Call SelectCostume(Board[FromIdx]);
    }
    Else
    {
        Call SelectCostume((Board[FromIdx] * -1));
    }
    Motion.SetX((-207 + (((FromIdx - 1) % 8) * 42.2)));
    Motion.SetY((147 - ((((FromIdx - 1) - ((FromIdx - 1) % 8)) / 8) * 42.2)));
    Looks.Show();
    Motion.GlideTo((-207 + (((ToIdx - 1) % 8) * 42.2)), (147 - ((((ToIdx - 1) - ((ToIdx - 1) % 8)) / 8) * 42.2)), 0.5);
    Pen.Stamp();
    Looks.Hide();
}

Define SelectCostume(num Piece) (warp=true)
{
    Looks.SwitchCostumeTo(NoPiece);
    If (Piece == BlackBishop)
    {
        Looks.SwitchCostumeTo(BlackBishop);
    }
    If (Piece == BlackPawn)
    {
        Looks.SwitchCostumeTo(BlackPawn);
    }
    If (Piece == BlackQueen)
    {
        Looks.SwitchCostumeTo(BlackQueen);
    }
    If (Piece == BlackKing)
    {
        Looks.SwitchCostumeTo(BlackKing);
    }
    If (Piece == BlackKnight)
    {
        Looks.SwitchCostumeTo(BlackKnight);
    }
    If (Piece == BlackRook)
    {
        Looks.SwitchCostumeTo(BlackRook);
    }
    If (Piece == WhiteBishop)
    {
        Looks.SwitchCostumeTo(WhiteBishop);
    }
    If (Piece == WhiteQueen)
    {
        Looks.SwitchCostumeTo(WhiteQueen);
    }
    If (Piece == WhiteKing)
    {
        Looks.SwitchCostumeTo(WhiteKing);
    }
    If (Piece == WhitePawn)
    {
        Looks.SwitchCostumeTo(WhitePawn);
    }
    If (Piece == WhiteKnight)
    {
        Looks.SwitchCostumeTo(WhiteKnight);
    }
    If (Piece == WhiteRook)
    {
        Looks.SwitchCostumeTo(WhiteRook);
    }
}
