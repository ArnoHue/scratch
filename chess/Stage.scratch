//----- Green flag events ---------------------------------------------------------------------------------------------

WhenGreenFlagClicked()
{
    Stg_IsGreenFlag = 1;
    Stg_BackdropEnabled = 1;
    Event.Broadcast("SoundWelcome");
    Event.Broadcast("Stg_ShowWelcomeMessage");
    Call StartGame;
}


//----- Backdrop switch events ----------------------------------------------------------------------------------------

WhenBackdropSwitchesTo(Board)
{
    Stg_KingHoveredIdx = -1;
    Event.Broadcast("Stg_KingHovered");
}

WhenBackdropSwitchesTo(BoardInverted)
{
    Stg_KingHoveredIdx = -1;
    Event.Broadcast("Stg_KingHovered");
}


//----- Broadcast received events -------------------------------------------------------------------------------------

WhenBroadcastReceived(GoK_ModeBusy)
{
    Stg_BackdropEnabled = 0;
}

WhenBroadcastReceived(GoK_ModeInput)
{
    Stg_BackdropEnabled = 1;
}

WhenBroadcastReceived(Stg_KingSelected)
{
    If (Backdrop.GetNumberName(name) == "Intro3")
    {
        If (Stg_KingSelectedIdx == 2)
        {
            GoK_IsPlayerBlack = 0;
            Looks.SwitchBackdropTo(Board);
            Event.Broadcast("GoK_StartGame");
        }
        Else
        {
            If (Stg_KingSelectedIdx == 1)
            {
                GoK_IsPlayerBlack = 1;
                Looks.SwitchBackdropTo(BoardInverted);
                Event.Broadcast("GoK_StartGame");
            }
        }
    }
}

WhenBroadcastReceived(Stg_ModalDialogBegin)
{
    Looks.ChangeEffectBy(brightness, -25);
}

WhenBroadcastReceived(Stg_ModalDialogEnd)
{
    Looks.ChangeEffectBy(brightness, 25);
}

WhenBroadcastReceived(Stg_StageClickedRouted)
{
    Call OnStageClicked;
}

WhenBroadcastReceived(Stg_TriggerRestart)
{
    Call StartGame;
}


//----- Custom blocks -------------------------------------------------------------------------------------------------

Define OnStageClicked (warp=false)
{
    If (Stg_BackdropEnabled == 1)
    {
        If ((Backdrop.GetNumberName(name) == "Board") Or (Backdrop.GetNumberName(name) == "BoardInverted"))
        {
            Stg_StageX = (floor(((Sensing.MouseX() + 230) / 42.2)) + 1);
            Stg_StageY = (floor(((Sensing.MouseY() + 168) / 42.2)) + 1);
            If (((Stg_StageX > 0) And (Stg_StageX < 9)) And ((Stg_StageY > 0) And (Stg_StageY < 9)))
            {
                If (Sensing.Timer() > (Stg_ClickedTimer + 0.25))
                {
                    Stg_ClickedTimer = Sensing.Timer();
                    Stg_SquareClickedIdx = (((8 - Stg_StageY) * 8) + Stg_StageX);
                    Event.BroadcastAndWait("Stg_SquareClicked");
                    Stop(this script);
                }
            }
            Event.BroadcastAndWait("Stg_StageClicked");
        }
    }
}

Define StartGame (warp=false)
{
    Pen.Clear();
    Looks.SwitchBackdropTo(Intro3);
    Stg_KingHoveredIdx = 0;
    Stg_ClickedTimer = 0;
    Stg_PrevMouseX = Sensing.MouseX();
    Stg_PrevMouseY = Sensing.MouseY();
    Repeat Until (Not ((Backdrop.GetNumberName(name) == "Intro3")))
    {
        If ((Not ((Sensing.MouseX() == Stg_PrevMouseX))) Or (Not ((Sensing.MouseY() == Stg_PrevMouseY))))
        {
            If (((Sensing.MouseX() > -15) And (Sensing.MouseX() < 45)) And ((Sensing.MouseY() > -80) And (Sensing.MouseY() < 100)))
            {
                If (Not ((Stg_KingHoveredIdx == 1)))
                {
                    Stg_KingHoveredIdx = 1;
                    Event.Broadcast("Stg_KingHovered");
                }
            }
            Else
            {
                If (((Sensing.MouseX() > 75) And (Sensing.MouseX() < 145)) And ((Sensing.MouseY() > -60) And (Sensing.MouseY() < 100)))
                {
                    If (Not ((Stg_KingHoveredIdx == 2)))
                    {
                        Stg_KingHoveredIdx = 2;
                        Event.Broadcast("Stg_KingHovered");
                    }
                }
                Else
                {
                    If (Not ((Stg_KingHoveredIdx == -1)))
                    {
                        Stg_KingHoveredIdx = 0;
                        Event.Broadcast("Stg_KingHovered");
                    }
                }
            }
        }
        Control.Wait(0.1);
    }
}
